{"remainingRequest":"C:\\Users\\User\\vuejsprojects\\App\\app\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\User\\vuejsprojects\\App\\app\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\User\\vuejsprojects\\App\\app\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\User\\vuejsprojects\\App\\app\\src\\views\\backend\\UploadModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\User\\vuejsprojects\\App\\app\\src\\views\\backend\\UploadModal.vue","mtime":1627583756173},{"path":"C:\\Users\\User\\vuejsprojects\\App\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\vuejsprojects\\App\\app\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\User\\vuejsprojects\\App\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\vuejsprojects\\App\\app\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["UploadModal.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"example-full\">\r\n    <div v-show=\"$refs.upload && $refs.upload.dropActive\" class=\"drop-active\">\r\n      <h3>Drop files here to see</h3>\r\n    </div>\r\n    <div class=\"upload\" v-show=\"!isOption\">\r\n      <div class=\"table-responsive\">\r\n        <table class=\"table table-hover\">\r\n          <thead>\r\n            <tr>\r\n              <th>Thumb</th>\r\n              <th>Name</th>\r\n              <th>Type</th>\r\n              <th>Size</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-if=\"!files.length\">\r\n              <td colspan=\"9\">\r\n                <div class=\"text-center p-5\">\r\n                  <h4>Drop files anywhere to upload<br />or</h4>\r\n                  <label :for=\"name\" class=\"btn btn-lg btn-primary\"\r\n                    >Select Files</label\r\n                  >\r\n                </div>\r\n              </td>\r\n            </tr>\r\n            <tr v-for=\"file in files\" :key=\"file.id\">\r\n              <td>\r\n                <img\r\n                  class=\"td-image-thumb\"\r\n                  v-if=\"file.thumb\"\r\n                  :src=\"file.thumb\"\r\n                  style=\"max-width: 10em !important;\"\r\n                />\r\n                <span v-if=\"file.type.includes('video')\"\r\n                  ><img src=\"./video.png\" alt=\"\" style=\"max-width: 10em;\"\r\n                /></span>\r\n              </td>\r\n              <td>\r\n                <div class=\"filename\">\r\n                  {{ file.name }}\r\n                </div>\r\n              </td>\r\n              <td>{{ file.type }}</td>\r\n              <td>{{ formatSize(file.size) }}</td>\r\n              <td>\r\n                <div class=\"btn-group\">\r\n                  <button class=\"btn\" type=\"button\">\r\n                    <a\r\n                      class=\"dropdown-item\"\r\n                      href=\"#\"\r\n                      @click.prevent=\"$refs.upload.remove(file)\"\r\n                      >Remove</a\r\n                    >\r\n                  </button>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div class=\"loader\" v-if=\"loadingIPFS\">\r\n        <Spinner />\r\n        Uploading file to IPFS...\r\n      </div>\r\n      <div class=\"loader\" v-if=\"loadingBlockchain\">\r\n        <Block />\r\n        Uploading data to Blockchain...\r\n        <a :href=\"`https://polygonscan.com/tx/${hash}`\">TX</a>\r\n      </div>\r\n      <div class=\"loader\" v-if=\"loadingApproval\">\r\n        <Block />\r\n        Will cost {{fee}} Otter. Waiting for Approval\r\n      </div>\r\n      <div class=\"example-footer\">\r\n        <div class=\"btn-group\">\r\n          <file-upload\r\n            class=\"btn btn-primary\"\r\n            :post-action=\"postAction\"\r\n            :put-action=\"putAction\"\r\n            :multiple=\"multiple\"\r\n            :directory=\"directory\"\r\n            :create-directory=\"createDirectory\"\r\n            :size=\"size || 0\"\r\n            :thread=\"thread < 1 ? 1 : thread > 5 ? 5 : thread\"\r\n            :headers=\"headers\"\r\n            :data=\"data\"\r\n            :drop=\"drop\"\r\n            :drop-directory=\"dropDirectory\"\r\n            :add-index=\"addIndex\"\r\n            v-model=\"files\"\r\n            @input-filter=\"inputFilter\"\r\n            @input-file=\"inputFile\"\r\n            ref=\"upload\"\r\n          >\r\n            <i class=\"fa fa-plus\"></i>\r\n            Select\r\n          </file-upload>\r\n        </div>\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn btn-success\"\r\n          v-if=\"readyToUpload\"\r\n          @click=\"approve()\"\r\n        >\r\n          <i class=\"fa fa-upload\" aria-hidden=\"true\"></i>\r\n          Upload\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<style scoped>\r\n.example-footer {\r\n  position: absolute;\r\n  bottom: 1em;\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 100%;\r\n}\r\n\r\n.example-full {\r\n  height: 80%;\r\n  color: white !important;\r\n}\r\n.example-full .btn-group .dropdown-menu {\r\n  display: block;\r\n  visibility: hidden;\r\n  transition: all 0.2s;\r\n}\r\n.example-full .btn-group:hover > .dropdown-menu {\r\n  visibility: visible;\r\n}\r\n.example-full label.dropdown-item {\r\n  margin-bottom: 0;\r\n}\r\n.example-full .btn-group .dropdown-toggle {\r\n  margin-right: 0.6rem;\r\n}\r\n.td-image-thumb {\r\n  max-width: 4em;\r\n  max-height: 4em;\r\n}\r\n.example-full .filename {\r\n  margin-bottom: 0.3rem;\r\n  color: rgb(85, 147, 240);\r\n}\r\n.example-full .btn-is-option {\r\n  margin-top: 0.25rem;\r\n}\r\n.example-full .example-foorer {\r\n  padding: 0.5rem 0;\r\n  border-top: 1px solid #e9ecef;\r\n  border-bottom: 1px solid #e9ecef;\r\n}\r\n.example-full .edit-image img {\r\n  max-width: 100%;\r\n}\r\n.example-full .edit-image-tool {\r\n  margin-top: 0.6rem;\r\n}\r\n.example-full .edit-image-tool .btn-group {\r\n  margin-right: 0.6rem;\r\n}\r\n.example-full .footer-status {\r\n  padding-top: 0.4rem;\r\n}\r\n.example-full .drop-active {\r\n  top: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  left: 0;\r\n  position: fixed;\r\n  z-index: 1;\r\n  opacity: 0.6;\r\n  text-align: center;\r\n  background: #000;\r\n}\r\n.example-full .drop-active h3 {\r\n  margin: -0.5em 0 0;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 0;\r\n  right: 0;\r\n  -webkit-transform: translateY(-50%);\r\n  -ms-transform: translateY(-50%);\r\n  transform: translateY(-50%);\r\n  font-size: 40px;\r\n  color: #fff;\r\n  padding: 0;\r\n}\r\n.loader {\r\n  background: rgba(0, 76, 148, 0.912);\r\n  height: max-content;\r\n  width: max-content;\r\n  padding: 5em;\r\n  border-radius: 2em;\r\n}\r\n</style>\r\n\r\n<script>\r\nimport Cropper from \"cropperjs\";\r\nimport ImageCompressor from \"@xkeshi/image-compressor\";\r\nimport FileUpload from \"vue-upload-component\";\r\nimport Spinner from \"../../loaders/spinner.vue\";\r\nimport Block from \"../../loaders/block.vue\";\r\nconst axios = require('axios');\r\nconst url = `https://api.pinata.cloud/pinning/pinFileToIPFS`;\r\n\r\nexport default {\r\n  components: {\r\n    FileUpload,\r\n    Spinner,\r\n    Block,\r\n  },\r\n  props: {\r\n    Otter: Object,\r\n    Pocket: Object,\r\n    myAddress: String,\r\n    web3: Object,\r\n    fee: Number,\r\n  },\r\n  data() {\r\n    return {\r\n      fileBuffer: null,\r\n      files: [],\r\n      loadingIPFS: false,\r\n      loadingBlockchain: false,\r\n      loadingApproval: false,\r\n      approved: false,\r\n      readyToUpload: false,\r\n      hash: 0,\r\n      accept: \"image/png,image/gif,image/jpeg,image/webp/html\",\r\n      extensions: \"gif,jpg,jpeg,png,webp,mp4\",\r\n      // extensions: ['gif', 'jpg', 'jpeg','png', 'webp'],\r\n      // extensions: /\\.(gif|jpe?g|png|webp)$/i,\r\n      minSize: 1024,\r\n      size: 1024 * 1024 * 10,\r\n      multiple: false,\r\n      directory: false,\r\n      drop: true,\r\n      dropDirectory: true,\r\n      createDirectory: false,\r\n      addIndex: false,\r\n      thread: 3,\r\n      name: \"file\",\r\n      postAction: \"/upload/post\",\r\n      putAction: \"/upload/put\",\r\n      headers: {\r\n        \"X-Csrf-Token\": \"xxxx\",\r\n      },\r\n      data: {\r\n        _csrf_token: \"xxxxxx\",\r\n      },\r\n      autoCompress: 1024 * 1024,\r\n      uploadAuto: false,\r\n      isOption: false,\r\n      addData: {\r\n        show: false,\r\n        name: \"\",\r\n        type: \"\",\r\n        content: \"\",\r\n      },\r\n      editFile: {\r\n        show: false,\r\n        name: \"\",\r\n      },\r\n    };\r\n  },\r\n  computed: {\r\n    feeInt: function () {\r\n      return parseInt(this.fee);\r\n    }\r\n  },\r\n  watch: {\r\n    \"editFile.show\"(newValue, oldValue) {\r\n      // 关闭了 自动删除 error\r\n      if (!newValue && oldValue) {\r\n        this.$refs.upload.update(this.editFile.id, {\r\n          error: this.editFile.error || \"\",\r\n        });\r\n      }\r\n      if (newValue) {\r\n        this.$nextTick(() => {\r\n          if (!this.$refs.editImage) {\r\n            return;\r\n          }\r\n          let cropper = new Cropper(this.$refs.editImage, {\r\n            autoCrop: false,\r\n          });\r\n          this.editFile = {\r\n            ...this.editFile,\r\n            cropper,\r\n          };\r\n        });\r\n      }\r\n    },\r\n    \"addData.show\"(show) {\r\n      if (show) {\r\n        this.addData.name = \"\";\r\n        this.addData.type = \"\";\r\n        this.addData.content = \"\";\r\n      }\r\n    },\r\n  },\r\n  methods: {\r\n    async approve() {\r\n      this.loadingApproval = true;\r\n      await this.Otter.methods\r\n        .increaseAllowance(\r\n          \"0x501C5074bEd28987d50ce493018d7ccdE6B7C2d9\",\r\n          this.web3.utils.toBN(this.feeInt * 10 ** 18)\r\n        )\r\n        .send({ from: this.myAddress })\r\n        .once(\"transactionHash\", function(hash) {\r\n          console.log(\"Approval tx Hash:\", hash);\r\n        })\r\n        .once(\"receipt\", (receipt) => {\r\n          console.log(\"Approval Receipt:\", receipt);\r\n          this.loadingApproval = false;\r\n\r\n          this.upload();\r\n        })\r\n        .on(\"error\", (error) => {\r\n          console.log(\"Error:\", error);\r\n          this.loadingApproval = false;\r\n        });\r\n    },\r\n    upload() {\r\n      this.loadingIPFS = true;\r\n      var data = new FormData();\r\n      data.append('file',this.files[0].file);\r\n      axios.post(url, data, {\r\n        maxBodyLength: 'Infinity',\r\n        headers: {\r\n          'Content-Type': `multipart/form-data;`,\r\n          pinata_api_key:'4868d7bfb3a5c10959ea',\r\n          pinata_secret_api_key:'c43dd3f6b7ec9effc72e733643cca1298aa7563425cb7930650cad9e7f192633'\r\n          }\r\n        }).then((response)=> {\r\n        const file = this.files[0];\r\n\r\n        this.loadingIPFS = false;\r\n        this.loadingBlockchain = true;\r\n\r\n        this.Pocket.methods\r\n          .uploadFile(\r\n            response.data.IpfsHash,\r\n            response.data.PinSize,\r\n            file.type,\r\n            file.name,\r\n            \"Description\"\r\n          )\r\n          .send({ from: this.myAddress })\r\n          .on(\"transactionHash\", (hash) => {\r\n            this.hash = hash;\r\n            setInterval(() => {\r\n              this.web3.eth.getTransaction(hash, (err, result) => {\r\n                console.log(\"tx:\", result);\r\n                if (result.blockHash) {\r\n                  this.loadingBlockchain = false;\r\n                  window.location.reload();\r\n                }\r\n              });\r\n            }, 1000);\r\n          })\r\n          .on(\"error\", (e) => {\r\n            window.alert(\"Error\", e);\r\n          });\r\n     \r\n        })\r\n        .catch((error)=> {\r\n          console.log(error);\r\n        })\r\n         \r\n    },\r\n    formatSize(size) {\r\n      if (size > 1024 * 1024 * 1024 * 1024) {\r\n        return (size / 1024 / 1024 / 1024 / 1024).toFixed(2) + \" TB\";\r\n      } else if (size > 1024 * 1024 * 1024) {\r\n        return (size / 1024 / 1024 / 1024).toFixed(2) + \" GB\";\r\n      } else if (size > 1024 * 1024) {\r\n        return (size / 1024 / 1024).toFixed(2) + \" MB\";\r\n      } else if (size > 1024) {\r\n        return (size / 1024).toFixed(2) + \" KB\";\r\n      }\r\n      return size.toString() + \" B\";\r\n    },\r\n    inputFilter(newFile, oldFile, prevent) {\r\n      if (newFile && !oldFile) {\r\n        // Before adding a file\r\n        // 添加文件前\r\n        // Filter system files or hide files\r\n        // 过滤系统文件 和隐藏文件\r\n        if (/(\\/|^)(Thumbs\\.db|desktop\\.ini|\\..+)$/.test(newFile.name)) {\r\n          return prevent();\r\n        }\r\n        // Filter php html js file\r\n        // 过滤 php html js 文件\r\n        if (/\\.(php5?|jsx?)$/i.test(newFile.name)) {\r\n          return prevent();\r\n        }\r\n        // Automatic compression\r\n        // 自动压缩\r\n        if (\r\n          newFile.file &&\r\n          newFile.error === \"\" &&\r\n          newFile.type.substr(0, 6) === \"image/\" &&\r\n          this.autoCompress > 0 &&\r\n          this.autoCompress < newFile.size\r\n        ) {\r\n          newFile.error = \"compressing\";\r\n          const imageCompressor = new ImageCompressor(null, {\r\n            convertSize: 1024 * 1024,\r\n            maxWidth: 512,\r\n            maxHeight: 512,\r\n          });\r\n          imageCompressor\r\n            .compress(newFile.file)\r\n            .then((file) => {\r\n              this.$refs.upload.update(newFile, {\r\n                error: \"\",\r\n                file,\r\n                size: file.size,\r\n                type: file.type,\r\n              });\r\n            })\r\n            .catch((err) => {\r\n              this.$refs.upload.update(newFile, {\r\n                error: err.message || \"compress\",\r\n              });\r\n            });\r\n        }\r\n      }\r\n      if (\r\n        newFile &&\r\n        newFile.error === \"\" &&\r\n        newFile.file &&\r\n        (!oldFile || newFile.file !== oldFile.file)\r\n      ) {\r\n        // Create a blob field\r\n        // 创建 blob 字段\r\n        newFile.blob = \"\";\r\n        let URL = window.URL || window.webkitURL;\r\n        if (URL) {\r\n          newFile.blob = URL.createObjectURL(newFile.file);\r\n        }\r\n        // Thumbnails\r\n        // 缩略图\r\n        newFile.thumb = \"\";\r\n        if (newFile.blob && newFile.type.substr(0, 6) === \"image/\") {\r\n          newFile.thumb = newFile.blob;\r\n        }\r\n      }\r\n      // image size\r\n      // image 尺寸\r\n      if (\r\n        newFile &&\r\n        newFile.error === \"\" &&\r\n        newFile.type.substr(0, 6) === \"image/\" &&\r\n        newFile.blob &&\r\n        (!oldFile || newFile.blob !== oldFile.blob)\r\n      ) {\r\n        newFile.error = \"image parsing\";\r\n        let img = new Image();\r\n        img.onload = () => {\r\n          this.$refs.upload.update(newFile, {\r\n            error: \"\",\r\n            height: img.height,\r\n            width: img.width,\r\n          });\r\n        };\r\n        img.οnerrοr = () => {\r\n          this.$refs.upload.update(newFile, { error: \"parsing image size\" });\r\n        };\r\n        img.src = newFile.blob;\r\n      }\r\n    },\r\n    // add, update, remove File Event\r\n    inputFile(newFile, oldFile) {\r\n      if (newFile) {\r\n        const file = newFile.file;\r\n\r\n        const reader = new window.FileReader();\r\n\r\n        reader.readAsArrayBuffer(file);\r\n        reader.onloadend = () => {\r\n          this.fileBuffer = Buffer(reader.result);\r\n          if (this.fileBuffer) {\r\n            this.readyToUpload = true;\r\n          }\r\n        };\r\n      }\r\n\r\n      if (!newFile && oldFile) {\r\n        // remove\r\n        if (oldFile.success && oldFile.response.id) {\r\n          // $.ajax({\r\n          //   type: 'DELETE',\r\n          //   url: '/upload/delete?id=' + oldFile.response.id,\r\n          // })\r\n        }\r\n      }\r\n      // Automatically activate upload\r\n      if (\r\n        Boolean(newFile) !== Boolean(oldFile) ||\r\n        oldFile.error !== newFile.error\r\n      ) {\r\n        if (this.uploadAuto && !this.$refs.upload.active) {\r\n          this.$refs.upload.active = true;\r\n        }\r\n      }\r\n    },\r\n    alert(message) {\r\n      alert(message);\r\n    },\r\n    onEditFileShow(file) {\r\n      this.editFile = { ...file, show: true };\r\n      this.$refs.upload.update(file, { error: \"edit\" });\r\n    },\r\n    onEditorFile() {\r\n      if (!this.$refs.upload.features.html5) {\r\n        this.alert(\"Your browser does not support\");\r\n        this.editFile.show = false;\r\n        return;\r\n      }\r\n      let data = {\r\n        name: this.editFile.name,\r\n        error: \"\",\r\n      };\r\n      if (this.editFile.cropper) {\r\n        let binStr = atob(\r\n          this.editFile.cropper\r\n            .getCroppedCanvas()\r\n            .toDataURL(this.editFile.type)\r\n            .split(\",\")[1]\r\n        );\r\n        let arr = new Uint8Array(binStr.length);\r\n        for (let i = 0; i < binStr.length; i++) {\r\n          arr[i] = binStr.charCodeAt(i);\r\n        }\r\n        data.file = new File([arr], data.name, { type: this.editFile.type });\r\n        data.size = data.file.size;\r\n      }\r\n      this.$refs.upload.update(this.editFile.id, data);\r\n      this.editFile.error = \"\";\r\n      this.editFile.show = false;\r\n    },\r\n    // add folder\r\n    onAddFolder() {\r\n      if (!this.$refs.upload.features.directory) {\r\n        this.alert(\"Your browser does not support\");\r\n        return;\r\n      }\r\n      let input = document.createElement(\"input\");\r\n      input.style =\r\n        \"background: rgba(255, 255, 255, 0);overflow: hidden;position: fixed;width: 1px;height: 1px;z-index: -1;opacity: 0;\";\r\n      input.type = \"file\";\r\n      input.setAttribute(\"allowdirs\", true);\r\n      input.setAttribute(\"directory\", true);\r\n      input.setAttribute(\"webkitdirectory\", true);\r\n      input.multiple = true;\r\n      document.querySelector(\"body\").appendChild(input);\r\n      input.click();\r\n      input.onchange = () => {\r\n        this.$refs.upload.addInputFile(input).then(function() {\r\n          document.querySelector(\"body\").removeChild(input);\r\n        });\r\n      };\r\n    },\r\n    onAddData() {\r\n      console.log(\"Adding Data...\");\r\n      this.addData.show = false;\r\n      if (!this.$refs.upload.features.html5) {\r\n        this.alert(\"Your browser does not support\");\r\n        return;\r\n      }\r\n      let file = new window.File([this.addData.content], this.addData.name, {\r\n        type: this.addData.type,\r\n      });\r\n      this.$refs.upload.add(file);\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"sourceRoot":"src/views/backend"}]}